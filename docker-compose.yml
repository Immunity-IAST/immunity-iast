version: '3'

services:
  db:
    image: postgres:12-alpine
    container_name: postgres
    expose:
      - 5432
    volumes:
      - postgres_volume:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=database
    restart: always
    healthcheck:
      test: pg_isready
      interval: 20s
      timeout: 5s
      retries: 3

  redis:
    image: redis:7.0.15
    container_name: redis
    expose:
      - 6379
    volumes: 
      - cache:/data
    restart: always
    command: redis-server --save 20 1 --loglevel warning

  api:
    image: opendisk-api:latest
    build:
      context: ./backend/
      dockerfile: Dockerfile
    container_name: api
    shm_size: 1g
    expose:
      - 8000
    volumes:
      - static_volume:/home/app/web/static
      - media_volume:/home/app/web/media
    environment:
      - SECRET_KEY=Sx5SE_rtqnau0VxhW!Zx&r%$*d+uy6lum5J&6GpwrOXwefEWf
      - API_URL=127.0.0.1
      - API_PORT=80
      - POSTGRES_PORT=5432
      - POSTGRES_HOST=db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=database
    depends_on:
      - db
    restart: always
    healthcheck:
      test: curl --fail http://localhost:8000 || exit 1
      interval: 20s
      timeout: 5s
      retries: 3

  worker:
    image: opendisk-worker:latest
    build:
      context: ./backend/
      dockerfile: Dockerfile.worker
    shm_size: 1g
    volumes:
      - static_volume:/home/app/web/static
      - media_volume:/home/app/web/media
    environment:
      - SECRET_KEY=Sx5SE_rtqnau0VxhW!Zx&r%$*d+uy6lum5J&6GpwrOXwefEWf
      - API_URL=127.0.0.1
      - API_PORT=80
      - POSTGRES_PORT=5432
      - POSTGRES_HOST=db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=database
    depends_on:
      - db
      - api
      - redis
    restart: always

  nginx:
    image: opendisk-nginx:latest
    build: ./nginx/
    container_name: nginx
    volumes:
      - static_volume:/home/app/web/static
      - media_volume:/home/app/web/media
    ports:
      - 80:80
    depends_on:
      - api
      - worker
    restart: always
    healthcheck:
      test: curl --fail http://localhost:80 || exit 1
      interval: 20s
      timeout: 5s
      retries: 3

volumes:
  postgres_volume:
  static_volume:
  media_volume:
  cache:
