name: Generate Images Pipeline

on:
  push:
    branches:
      - 'master'

jobs:
  generate-images:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      - name: Install XVFB
        run: sudo apt-get update && sudo apt-get install -y xvfb

      - name: Start XVFB
        run: |
          Xvfb :99 -screen 0 1024x768x24 &
          export DISPLAY=:99
          export XVFB_PID=$!

      - name: Install diagrams package
        run: npm install -g diagrams

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y graphviz
          pip install pylint pyflowchart graphviz docker-compose-diagram

      - name: Cleanup old schemes
        run: |
          rm -rf diagrams/*

      - name: Core class diagram
        run: |
          pyreverse --no-standalone --output-directory diagrams/ -f ALL backend/core/
          find diagrams/ -name '*.dot' -exec sed -i 's/green/black/g' {} +
          dot -Tpng diagrams/classes.dot -o diagrams/core_classes.png
          dot -Tpng diagrams/packages.dot -o diagrams/core_packages.png

      - name: Engine class diagram
        run: |
          pyreverse --no-standalone --output-directory diagrams/ -f ALL backend/engine/
          find diagrams/ -name '*.dot' -exec sed -i 's/green/black/g' {} +
          dot -Tpng diagrams/classes.dot -o diagrams/engine_classes.png
          dot -Tpng diagrams/packages.dot -o diagrams/engine_packages.png

      - name: Agent API class diagram
        run: |
          pyreverse --no-standalone --output-directory diagrams/ -f ALL backend/agent/
          find diagrams/ -name '*.dot' -exec sed -i 's/green/black/g' {} +
          dot -Tpng diagrams/classes.dot -o diagrams/agent_classes.png
          dot -Tpng diagrams/packages.dot -o diagrams/agent_packages.png

      - name: Users API class diagram
        run: |
          pyreverse --no-standalone --output-directory diagrams/ -f ALL backend/users/
          find diagrams/ -name '*.dot' -exec sed -i 's/green/black/g' {} +
          dot -Tpng diagrams/classes.dot -o diagrams/users_classes.png
          dot -Tpng diagrams/packages.dot -o diagrams/users_packages.png

      - name: Generate flowcharts as txt
        run: |
          python3 generate_flowcharts.py

      #- name: Flowcharts to png
      #  run: |
      #    for file in diagrams/*.txt; do DISPLAY=:99 diagrams flowchart "$file" "${file%.txt}.svg"; done

      - name: Generate Dockerfile diagram
        run: | 
          sudo docker run --rm --user "$(id -u):$(id -g)" --workdir /workspace --volume "$(pwd)":/workspace ghcr.io/patrickhoefler/dockerfilegraph:alpine -o png -f docker/Dockerfile --layers --legend
          mv Dockerfile.png diagrams/.

      - name: Docker compose diagram
        run: |
          cd docker-compose && compose-diagram --file docker-compose.yml --direction=TB --nodesep=1.2
          mv docker-compose.png ../diagrams/.

      - name: Stage new files
        run: git add .

      - name: Commit changes
        run: |
          git config user.name ${{ secrets.GIT_NAME }}
          git config user.email ${{ secrets.GIT_EMAIL }}
          git commit -m "auto: generated schemes" || echo "No changes to commit"

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
